---
- name: get home dir path
  become: false
  shell: "echo $HOME"
  register: home_dir_path

- name: Install using the repository
  shell: |
    apt-get update
    apt-get install -y ca-certificates curl gnupg lsb-release
    mkdir -p /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    echo deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable | tee /etc/apt/sources.list.d/docker.list > /dev/null

- name: Install Docker Engine
  shell: |
    apt-get update
    apt-get install -y docker-ce=5:20.10.21~3-0~ubuntu-focal docker-ce-cli=5:20.10.21~3-0~ubuntu-focal containerd.io docker-compose-plugin

- name: cri-o download
  shell: |
    wget https://storage.googleapis.com/cri-o/artifacts/cri-o.arm64.d93b2dfb8d0f2ad0f8b9061d941e3b216baa5814.tar.gz
    tar zxvf cri-o.arm64.d93b2dfb8d0f2ad0f8b9061d941e3b216baa5814.tar.gz
    cd cri-o
    ./install

- name: remove cri-o tar file
  file:
    path: "{{ home_dir_path.stdout }}/cri-o.arm64.d93b2dfb8d0f2ad0f8b9061d941e3b216baa5814.tar.gz"
    state: absent

- name: remove cri-o dir
  file:
    path: "{{ home_dir_path.stdout }}/cri-o"
    state: absent

- name: enable crio.service
  shell: |
    echo unqualified-search-registries = [\"docker.io\", \"quay.io\"] > /etc/containers/registries.conf
    sed -i 's/,metacopy=on//g' /etc/containers/storage.conf
    systemctl daemon-reload
    systemctl enable crio.service
    systemctl start crio.service
  ignore_errors: true
