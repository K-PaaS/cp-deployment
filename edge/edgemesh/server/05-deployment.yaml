apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kubeedge
    kubeedge: edgemesh-server
  name: edgemesh-server
  namespace: kubeedge
spec:
  selector:
    matchLabels:
      k8s-app: kubeedge
      kubeedge: edgemesh-server
  template:
    metadata:
      labels:
        k8s-app: kubeedge
        kubeedge: edgemesh-server
    spec:
      hostNetwork: true
      # use label to selector node
      nodeName: {MASTER_NODE_HOSTNAME}
      containers:
      - name: edgemesh-server
        image: kubeedge/edgemesh-server:v1.10.0
        env:
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        ports:
        - containerPort: 20004
          name: relay
        resources:
          limits:
            cpu: 200m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 512Mi
        volumeMounts:
        - name: conf
          mountPath: /etc/kubeedge/config
        - name: edgemesh
          mountPath: /etc/kubeedge/edgemesh
        - name: ca-server-token
          mountPath: /etc/kubeedge/cert
        - name: host-time
          mountPath: /etc/localtime
          readOnly: true
      restartPolicy: Always
      serviceAccountName: edgemesh-server
      volumes:
      - name: conf
        configMap:
          name: edgemesh-server-cfg
      - name: edgemesh
        hostPath:
          path: /etc/kubeedge/edgemesh
          type: DirectoryOrCreate
      - name: ca-server-token
        secret:
          secretName: tokensecret
      - name: host-time
        hostPath:
          path: /etc/localtime
